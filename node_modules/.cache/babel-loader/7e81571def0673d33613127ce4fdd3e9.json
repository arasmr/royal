{"ast":null,"code":"import _defineProperty from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emrearas/Desktop/royal/src/Components/Login.js\";\nimport React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Alert, Button, Card, CardBody, CardGroup, Col, Container, Form, FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { Icon } from 'react-icons-kit';\nimport { at } from 'react-icons-kit/fa/at';\nimport { pencil } from 'react-icons-kit/fa/pencil';\nimport { firebaseApp } from '../base';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uid: null,\n      email: '',\n      password: ''\n    };\n\n    _this.authHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(authData) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  uid: authData.user.uid\n                });\n\n                return _context.abrupt(\"return\", _this.redirect());\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.logout =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return firebase.auth().signOut();\n\n            case 2:\n              _this.setState({\n                uid: null\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleClickEmail = function () {\n      firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function (res) {\n        return _this.redirect();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          return _this2.authHandler({\n            user: user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect() {\n      this.props.history.replace('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"p\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Sign In to your account \"), React.createElement(FormGroup, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"icon\",\n        size: 20,\n        icon: at,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        name: \"email\",\n        onChange: function onChange(events) {\n          _this3.handleUserInput(events);\n        },\n        type: \"text\",\n        placeholder: \"Email\",\n        autoComplete: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"icon\",\n        size: 20,\n        icon: pencil,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        onBlur: this.handleBlur('password'),\n        name: \"password\",\n        onChange: function onChange(events) {\n          _this3.handleUserInput(events);\n        },\n        type: \"password\",\n        placeholder: \"Password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(Alert, {\n        color: \"danger\",\n        isOpen: this.state.formValid && this.state.failed,\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.errorText), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !this.state.formValid,\n        onClick: this.handleClickEmail,\n        color: \"primary\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Login\")))))))))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/emrearas/Desktop/royal/src/Components/Login.js"],"names":["React","firebase","Alert","Button","Card","CardBody","CardGroup","Col","Container","Form","FormFeedback","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Icon","at","pencil","firebaseApp","Login","state","uid","email","password","authHandler","authData","setState","user","redirect","logout","auth","signOut","authenticate","provider","authProvider","signInWithPopup","then","handleUserInput","e","name","target","value","handleClickEmail","signInWithEmailAndPassword","res","onAuthStateChanged","props","history","replace","handleSubmit","events","handleBlur","formValid","failed","errorText","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,GAAnD,EAAwDC,SAAxD,EAAmEC,IAAnE,EAAyEC,YAAzE,EAAuFC,SAAvF,EAAmGC,KAAnG,EAA0GC,UAA1G,EAAsHC,eAAtH,EAAsIC,cAAtI,EAAsJC,GAAtJ,QAAiK,YAAjK;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,EAAR,QAAiB,uBAAjB;AACA,SAAQC,MAAR,QAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,SAA5B;;IAEMC,K;;;;;;;;;;;;;;;;;UAEFC,K,GAAM;AACFC,MAAAA,GAAG,EAAG,IADJ;AAEFC,MAAAA,KAAK,EAAC,EAFJ;AAGFC,MAAAA,QAAQ,EAAC;AAHP,K;;UAcNC,W;;;;;+BAAc,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACV,sBAAKC,QAAL,CAAc;AACVL,kBAAAA,GAAG,EAAGI,QAAQ,CAACE,IAAT,CAAcN;AADV,iBAAd;;AADU,iDAIH,MAAKO,QAAL,EAJG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAWdC,M;;;;6BAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACC9B,QAAQ,CAAC+B,IAAT,GAAgBC,OAAhB,EADD;;AAAA;AAEL,oBAAKL,QAAL,CAAc;AAACL,gBAAAA,GAAG,EAAC;AAAL,eAAd;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAKTW,Y,GAAe,UAACC,QAAD,EAAc;AACzB,UAAMC,YAAY,GAAG,IAAInC,QAAQ,CAAC+B,IAAT,WAAiBG,QAAjB,kBAAJ,EAArB;AACAf,MAAAA,WAAW,CAACY,IAAZ,GAAmBK,eAAnB,CAAmCD,YAAnC,EAAiDE,IAAjD,CAAsD,MAAKZ,WAA3D;AACH,K;;UAEDa,e,GAAkB,UAACC,CAAD,EAAO;AACrB,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAApB;AACA,UAAIE,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAArB;;AACA,YAAKf,QAAL,qBAAgBa,IAAhB,EAAsBE,KAAtB;AACH,K;;UAEDC,gB,GAAmB,YAAM;AACrB3C,MAAAA,QAAQ,CAAC+B,IAAT,GAAgBa,0BAAhB,CAA2C,MAAKvB,KAAL,CAAWE,KAAtD,EAA6D,MAAKF,KAAL,CAAWG,QAAxE,EACCa,IADD,CACM,UAAAQ,GAAG;AAAA,eAAI,MAAKhB,QAAL,EAAJ;AAAA,OADT;AAEH,K;;;;;;;wCAtCkB;AAAA;;AACf7B,MAAAA,QAAQ,CAAC+B,IAAT,GAAgBe,kBAAhB,CAAmC,UAAAlB,IAAI,EAAE;AACrC,YAAGA,IAAH,EAAQ;AACJ,iBAAO,MAAI,CAACH,WAAL,CAAiB;AAACG,YAAAA,IAAI,EAAJA;AAAD,WAAjB,CAAP;AACH;AACJ,OAJD;AAKH;;;+BASW;AACR,WAAKmB,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,GAA3B;AACH;;;6BAuBO;AAAA;;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAI,KAAKC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFA,EAGA,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAG,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,IAAI,EAAE,EAA7B;AAAiC,QAAA,IAAI,EAAEjC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,CADA,EAMA,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,QAAQ,EAAE,kBAACkC,MAAD,EAAY;AAAC,UAAA,MAAI,CAACb,eAAL,CAAqBa,MAArB;AAA6B,SAFxD;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,QAAA,YAAY,EAAC,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADJ,CAHA,EAmBA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,IAAI,EAAE,EAA7B;AAAiC,QAAA,IAAI,EAAEjC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADA,EAMA,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE,KAAKkC,UAAL,CAAgB,UAAhB,CADZ;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,QAAQ,EAAE,kBAACD,MAAD,EAAY;AAAC,UAAA,MAAI,CAACb,eAAL,CAAqBa,MAArB;AAA6B,SAHxD;AAII,QAAA,IAAI,EAAC,UAJT;AAKI,QAAA,WAAW,EAAC,UALhB;AAMI,QAAA,YAAY,EAAC,kBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADJ,CAnBA,EAoCA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAsB,QAAA,MAAM,EAAE,KAAK9B,KAAL,CAAWgC,SAAX,IAAwB,KAAKhC,KAAL,CAAWiC,MAAjE;AAAyE,QAAA,SAAS,EAAC,oBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKjC,KAAL,CAAWkC,SADhB,CApCA,EAuCA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACI,QAAA,QAAQ,EAAE,CAAC,KAAKlC,KAAL,CAAWgC,SAD1B;AAEI,QAAA,OAAO,EAAE,KAAKV,gBAFlB;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,SAAS,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CADJ,CAvCA,CADJ,CADA,CADJ,CADA,CADJ,CADA,CADJ,CADJ;AAkEH;;;;EAnHe5C,KAAK,CAACyD,S;;AAsH1B,eAAepC,KAAf","sourcesContent":["import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Alert, Button, Card, CardBody, CardGroup, Col, Container, Form, FormFeedback, FormGroup , Input, InputGroup, InputGroupAddon,InputGroupText, Row } from 'reactstrap';\nimport {Icon} from 'react-icons-kit';\nimport {at} from 'react-icons-kit/fa/at'\nimport {pencil} from 'react-icons-kit/fa/pencil'\nimport { firebaseApp } from '../base';\n\nclass Login extends React.Component{\n\n    state={\n        uid : null,\n        email:'',\n        password:''\n    }\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user=>{\n            if(user){\n                return this.authHandler({user});\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        this.setState({\n            uid : authData.user.uid,\n        })\n        return this.redirect();\n    }\n\n    redirect () {\n        this.props.history.replace('/');\n    }\n\n    logout = async() => {\n        await firebase.auth().signOut()\n        this.setState({uid:null})\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n\n    handleUserInput = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n        this.setState({[name]:value});\n    }\n\n    handleClickEmail = () => {\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(res => this.redirect());\n    }\n    \n    render(){\n        return(\n            <div className=\"app flex-row align-items-center\">\n                <Container>\n                <Row className=\"justify-content-center\">\n                    <Col md=\"9\">\n                    <CardGroup>\n                        <Card className=\"p-4\">\n                        <CardBody>\n                            <Form onSubmit = {this.handleSubmit}>\n                            <h1>Login</h1>\n                            <p className=\"text-muted\">Sign In to your account </p>\n                            <FormGroup className = \"form-group\">\n                                <InputGroup className=\"mb-4\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                    <Icon className=\"icon\" size={20} icon={at}/>\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                                <Input \n                                    name='email' \n                                    onChange={(events) => {this.handleUserInput(events)}} \n                                    type=\"text\" \n                                    placeholder=\"Email\" \n                                    autoComplete=\"Email\"\n                                />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"mb-4\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                        <Icon className=\"icon\" size={20} icon={pencil}/>\n                                    </InputGroupText>\n                                </InputGroupAddon>      \n                                <Input\n                                    onBlur={this.handleBlur('password')}\n                                    name='password' \n                                    onChange={(events) => {this.handleUserInput(events)}} \n                                    type=\"password\" \n                                    placeholder=\"Password\" \n                                    autoComplete=\"current-password\"\n                                />\n                                </InputGroup>\n                            </FormGroup>\n                            <Alert color=\"danger\" isOpen={this.state.formValid && this.state.failed} className=\"align-items-center\">\n                                {this.state.errorText}\n                            </Alert>\n                            <Row>\n                                <Col xs=\"6\">\n                                <Button \n                                    disabled={!this.state.formValid} \n                                    onClick={this.handleClickEmail} \n                                    color=\"primary\" \n                                    className=\"btn btn-primary\">Login\n                                </Button>\n                                </Col>\n                            </Row>\n                            </Form>\n                        </CardBody>\n                        </Card>\n                    </CardGroup>\n                    </Col>\n                </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}