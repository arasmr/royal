{"ast":null,"code":"import _defineProperty from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emrearas/Desktop/royal/src/Pages/Dashboard.js\";\nimport React from 'react';\nimport NavigationBar from '../Components/Dashboard/NavigationBar';\nimport PageContent from '../Components/Dashboard/PageContent';\nimport base from '../base';\nimport PropTypes from 'prop-types';\nvar url = '';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menuItems: {},\n      order: {},\n      url: ''\n    };\n\n    _this.updateMenuItem = function (key, updatedMenuItem) {\n      // take the copy of the current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update that state\n\n\n      menuItems[key] = updatedMenuItem; // set the new menuItems object to the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteMenuItem = function (key) {\n      // take the copy of state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update the state\n\n\n      menuItems[key] = null; // set the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // update the state\n\n\n      delete order[key]; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.addMenuItem = function (menuItem) {\n      // take the copy of current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // get the new state\n\n\n      menuItems[\"menuItem\".concat(Date.now())] = menuItem; // set the new state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // change or update the state\n\n\n      order[key] = order[key] + 1 || 1; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.uploadPicture = function (key) {\n      // take the copy of the current state\n      var menuItems = _objectSpread({}, _this.state.menuItems);\n\n      var request = window.cloudinary.openUploadWidget({\n        cloud_name: 'djgv39mwv',\n        upload_preset: 'ombjh6fb',\n        tags: ['xmas']\n      }, function (error, result) {\n        url = result[0]['url'];\n      });\n      console.log(url);\n\n      if (url.length > 0) {\n        request.close();\n\n        var updatedMenuItem = _objectSpread({}, _this.state.menuItem, _defineProperty({}, 'image', url[0]));\n\n        console.log(updatedMenuItem);\n\n        _this.updateMenuItem(key, updatedMenuItem);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      var localStorageRef = localStorage.getItem(params);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/menuItems\"), {\n        context: this,\n        state: 'menuItems'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navigation-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(NavigationBar, {\n        history: this.props.history,\n        addMenuItem: this.addMenuItem,\n        deleteMenuItem: this.deleteMenuItem,\n        updateMenuItem: this.updateMenuItem,\n        loadSampleMenuItem: this.loadSampleMenuItem,\n        menuItems: this.state.menuItems,\n        uploadPicture: this.uploadPicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(PageContent, {\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  match: PropTypes.object\n};\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/emrearas/Desktop/royal/src/Pages/Dashboard.js"],"names":["React","NavigationBar","PageContent","base","PropTypes","url","Dashboard","state","menuItems","order","updateMenuItem","key","updatedMenuItem","setState","deleteMenuItem","deleteOrder","addMenuItem","menuItem","Date","now","addToOrder","uploadPicture","request","window","cloudinary","openUploadWidget","cloud_name","upload_preset","tags","error","result","console","log","length","close","params","props","match","localStorageRef","localStorage","getItem","JSON","parse","ref","syncState","storeId","context","setItem","stringify","removeBinding","history","loadSampleMenuItem","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavigationBar from '../Components/Dashboard/NavigationBar';\nimport PageContent from '../Components/Dashboard/PageContent';\nimport base from '../base';\nimport PropTypes from 'prop-types';\n\nlet url = '';\n\nexport default class Dashboard extends React.Component{\n    state = {\n        menuItems:{},\n        order:{},\n        url:''\n    }\n\n    static propTypes = {\n        match : PropTypes.object,\n    };\n\n    componentDidMount() {\n        const {params} = this.props.match;\n        const localStorageRef = localStorage.getItem(params);\n        if(localStorageRef){\n            this.setState({order:JSON.parse(localStorageRef)})\n        }\n        this.ref = base.syncState(`${params.storeId}/menuItems`,{\n            context:this,\n            state:'menuItems'\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    updateMenuItem = (key, updatedMenuItem) => {\n        // take the copy of the current state\n        const menuItems = {...this.state.menuItems};\n        // update that state\n        menuItems[key] = updatedMenuItem;\n        // set the new menuItems object to the state\n        this.setState({menuItems});\n\n    }\n\n    deleteMenuItem = (key) => {\n        // take the copy of state\n        const menuItems = {...this.state.menuItems};\n        // update the state\n        menuItems[key] = null;\n        // set the state\n        this.setState({menuItems});\n    }\n\n    deleteOrder = (key) => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // update the state\n        delete order[key];\n        // set the state\n        this.setState({order});\n    }\n\n    addMenuItem = menuItem => {\n        // take the copy of current state\n        const menuItems = {...this.state.menuItems};\n        // get the new state\n        menuItems[`menuItem${Date.now()}`] = menuItem;\n        // set the new state\n        this.setState({\n            menuItems:menuItems,\n        })\n    }\n\n    addToOrder = key => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // change or update the state\n        order[key] = order[key] + 1 || 1;\n        // set the state\n        this.setState({order:order});\n    }\n\n    uploadPicture = (key) => {\n        // take the copy of the current state\n        const menuItems = {...this.state.menuItems};\n        let request = window.cloudinary.openUploadWidget(\n          { cloud_name: 'djgv39mwv', upload_preset: 'ombjh6fb', tags: ['xmas'] },\n          function(error, result) {\n            url = result[0]['url'];\n          }\n        );\n        console.log(url);\n        if(url.length > 0){\n            request.close();\n            const updatedMenuItem = {\n                ...this.state.menuItem,\n                ['image'] : url[0]\n            };\n            console.log(updatedMenuItem);\n            this.updateMenuItem(key,updatedMenuItem);\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"dashboard\">\n                <div className=\"navigation-bar\">\n                    <NavigationBar \n                        history={this.props.history}\n                        addMenuItem={this.addMenuItem}\n                        deleteMenuItem = {this.deleteMenuItem} \n                        updateMenuItem = {this.updateMenuItem}\n                        loadSampleMenuItem={this.loadSampleMenuItem}\n                        menuItems ={this.state.menuItems}\n                        uploadPicture = {this.uploadPicture}\n                    />\n                </div>\n                <div className=\"page-content\">\n                    <PageContent history={this.props.history}/>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}