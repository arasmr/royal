{"ast":null,"code":"import _objectSpread from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emrearas/Desktop/royal/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\nimport BruiloftenMenu from './Pages/BruiloftenMenu';\nimport BuffetMenu from './Pages/BuffetMenu';\nimport Settings from './Pages/Settings';\nimport base from './base';\nimport PropTypes from 'prop-types';\n\nvar Router =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Router);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Router)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menuItems: {},\n      order: {}\n    };\n\n    _this.updateMenuItem = function (key, updatedMenuItem) {\n      // take the copy of the current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update that state\n\n\n      menuItems[key] = updatedMenuItem; // set the new menuItems object to the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteMenuItem = function (key) {\n      // take the copy of state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update the state\n\n\n      menuItems[key] = null; // set the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // update the state\n\n\n      delete order[key]; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.addMenuItem = function (menuItem) {\n      // take the copy of current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // get the new state\n\n\n      menuItems[\"menuItem\".concat(Date.now())] = menuItem; // set the new state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // change or update the state\n\n\n      order[key] = order[key] + 1 || 1; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Router, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      var localStorageRef = localStorage.getItem(params);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/menuItems\"), {\n        context: this,\n        state: 'menuItems'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/home\",\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/bruiloften\",\n        component: BruiloftenMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/buffet\",\n        component: function component() {\n          return React.createElement(BuffetMenu, {\n            addToOrder: _this2.addToOrder,\n            menu: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/settings\",\n        component: BuffetMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Router;\n}(React.Component);\n\nRouter.propTypes = {\n  match: PropTypes.object\n};\nexport default Router;","map":{"version":3,"sources":["/Users/emrearas/Desktop/royal/src/App.js"],"names":["React","BrowserRouter","Route","Switch","Dashboard","BruiloftenMenu","BuffetMenu","Settings","base","PropTypes","Router","state","menuItems","order","updateMenuItem","key","updatedMenuItem","setState","deleteMenuItem","deleteOrder","addMenuItem","menuItem","Date","now","addToOrder","params","props","match","localStorageRef","localStorage","getItem","JSON","parse","ref","syncState","storeId","context","setItem","stringify","removeBinding","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\nimport BruiloftenMenu from './Pages/BruiloftenMenu';\nimport BuffetMenu from './Pages/BuffetMenu';\nimport Settings from './Pages/Settings';\nimport base from './base';\nimport PropTypes from 'prop-types';\n\nclass Router extends React.Component{\n    state = {\n        menuItems:{},\n        order:{}\n    }\n\n    static propTypes = {\n        match : PropTypes.object,\n    };\n\n    componentDidMount() {\n        const {params} = this.props.match;\n        const localStorageRef = localStorage.getItem(params);\n        if(localStorageRef){\n            this.setState({order:JSON.parse(localStorageRef)})\n        }\n        this.ref = base.syncState(`${params.storeId}/menuItems`,{\n            context:this,\n            state:'menuItems'\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    updateMenuItem = (key, updatedMenuItem) => {\n        // take the copy of the current state\n        const menuItems = {...this.state.menuItems};\n        // update that state\n        menuItems[key] = updatedMenuItem;\n        // set the new menuItems object to the state\n        this.setState({menuItems});\n\n    }\n\n    deleteMenuItem = (key) => {\n        // take the copy of state\n        const menuItems = {...this.state.menuItems};\n        // update the state\n        menuItems[key] = null;\n        // set the state\n        this.setState({menuItems});\n    }\n\n    deleteOrder = (key) => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // update the state\n        delete order[key];\n        // set the state\n        this.setState({order});\n    }\n\n    addMenuItem = menuItem => {\n        // take the copy of current state\n        const menuItems = {...this.state.menuItems};\n        // get the new state\n        menuItems[`menuItem${Date.now()}`] = menuItem;\n        // set the new state\n        this.setState({\n            menuItems:menuItems,\n        })\n    }\n\n    addToOrder = key => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // change or update the state\n        order[key] = order[key] + 1 || 1;\n        // set the state\n        this.setState({order:order});\n    }\n    render(){\n        return(\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/home\" component={Dashboard}/>\n                    <Route exact path=\"/bruiloften\" component={BruiloftenMenu}/>\n                    <Route exact path=\"/buffet\" component={() => <BuffetMenu addToOrder={this.addToOrder} menu/>}/>\n                    <Route exact path=\"/settings\" component={BuffetMenu}/>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router;"]},"metadata":{},"sourceType":"module"}