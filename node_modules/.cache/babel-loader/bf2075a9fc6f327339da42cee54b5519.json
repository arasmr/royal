{"ast":null,"code":"import _objectSpread from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emrearas/Desktop/royal/src/Components/App.js\";\nimport React from 'react';\nimport Order from './Order';\nimport RoyalHeader from './RoyalHeader';\nimport Header from './Header';\nimport sampleFishes from '../sample-fishes';\nimport Menu from './Menu';\nimport base from '../base';\nimport PropTypes from 'prop-types';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menuItems: {},\n      order: {},\n      hHoofdgerechten: hHoofdgerechten\n    };\n\n    _this.updateMenuItem = function (key, updatedFish) {\n      // take the copy of the current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update that state\n\n\n      menuItems[key] = updatedFish; // set the new menuItems object to the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteMenuItem = function (key) {\n      // take the copy of state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update the state\n\n\n      menuItems[key] = null; // set the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // update the state\n\n\n      delete order[key]; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.addMenuItem = function (menuItem) {\n      // take the copy of current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // get the new state\n\n\n      menuItems[\"menuItem\".concat(Date.now())] = menuItem; // set the new state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.loadSampleMenuItem = function () {\n      _this.setState({\n        menuItems: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // change or update the state\n\n\n      order[key] = order[key] + 1 || 1; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      var localStorageRef = localStorage.getItem(params);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/menuItems\"), {\n        context: this,\n        state: 'menuItems'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n      this.fillMenus();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"fillMenus\",\n    value: function fillMenus() {\n      var _this2 = this;\n\n      if (this.setState.menuItems !== null) {\n        Object.keys(this.state.menuItems).map(function (key) {\n          var menuItem = _this2.state.menuItems[key];\n\n          if (menuItem['type'] === 'Hoofdgerechten') {\n            _this2.setState({});\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Header, {\n        addMenuItem: this.addMenuItem,\n        deleteMenuItem: this.deleteMenuItem,\n        updateMenuItem: this.updateMenuItem,\n        loadSampleMenuItem: this.loadSampleMenuItem,\n        menuItems: this.state.menuItems,\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container-dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(RoyalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        menuItems: this.state.menuItems,\n        addToOrder: this.addToOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Order, {\n        menuItems: this.state.menuItems,\n        order: this.state.order,\n        deleteOrder: this.deleteOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  match: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/Users/emrearas/Desktop/royal/src/Components/App.js"],"names":["React","Order","RoyalHeader","Header","sampleFishes","Menu","base","PropTypes","App","state","menuItems","order","hHoofdgerechten","updateMenuItem","key","updatedFish","setState","deleteMenuItem","deleteOrder","addMenuItem","menuItem","Date","now","loadSampleMenuItem","addToOrder","params","props","match","localStorageRef","localStorage","getItem","JSON","parse","ref","syncState","storeId","context","setItem","stringify","fillMenus","removeBinding","Object","keys","map","history","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Order from './Order';\nimport RoyalHeader from './RoyalHeader';\nimport Header from './Header';\nimport sampleFishes from '../sample-fishes';\nimport Menu from './Menu';\nimport base from '../base';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component{\n    state = {\n        menuItems:{},\n        order:{},\n    hHoofdgerechten\n    }\n\n    static propTypes = {\n        match : PropTypes.object,\n    };\n\n    componentDidMount() {\n        const {params} = this.props.match;\n        const localStorageRef = localStorage.getItem(params);\n        if(localStorageRef){\n            this.setState({order:JSON.parse(localStorageRef)})\n        }\n        this.ref = base.syncState(`${params.storeId}/menuItems`,{\n            context:this,\n            state:'menuItems'\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n        this.fillMenus();\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    fillMenus () {\n        if(this.setState.menuItems !== null){\n            Object.keys(this.state.menuItems).map((key) => {\n                const menuItem = this.state.menuItems[key];\n                if(menuItem['type'] === 'Hoofdgerechten') {\n                    this.setState({})\n                }\n            }\n            )\n        }\n    }\n\n    updateMenuItem = (key, updatedFish) => {\n        // take the copy of the current state\n        const menuItems = {...this.state.menuItems};\n        // update that state\n        menuItems[key] = updatedFish;\n        // set the new menuItems object to the state\n        this.setState({menuItems});\n\n    }\n\n    deleteMenuItem = (key) => {\n        // take the copy of state\n        const menuItems = {...this.state.menuItems};\n        // update the state\n        menuItems[key] = null;\n        // set the state\n        this.setState({menuItems});\n    }\n\n    deleteOrder = (key) => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // update the state\n        delete order[key];\n        // set the state\n        this.setState({order});\n    }\n\n    addMenuItem = menuItem => {\n        // take the copy of current state\n        const menuItems = {...this.state.menuItems};\n        // get the new state\n        menuItems[`menuItem${Date.now()}`] = menuItem;\n        // set the new state\n        this.setState({\n            menuItems:menuItems,\n        })\n    }\n\n    loadSampleMenuItem = () =>{\n        this.setState({menuItems : sampleFishes});\n    }\n\n    addToOrder = key => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // change or update the state\n        order[key] = order[key] + 1 || 1;\n        // set the state\n        this.setState({order:order});\n    }\n\n    render(){\n        return(\n            <div>\n                <div>\n                    <Header\n                        addMenuItem={this.addMenuItem}\n                        deleteMenuItem = {this.deleteMenuItem} \n                        updateMenuItem = {this.updateMenuItem}\n                        loadSampleMenuItem={this.loadSampleMenuItem}\n                        menuItems ={this.state.menuItems}\n                        history={this.props.history}\n                    />\n                </div>\n                <div className=\"container-dashboard\">\n                <div className=\"menu\">\n                    <RoyalHeader/>\n                    <ul className=\"fishes\">\n                        <Menu\n                        menuItems={this.state.menuItems} \n                        addToOrder={this.addToOrder}/>\n                    </ul>\n                </div>\n                <div className=\"order\">\n                    <Order \n                        menuItems={this.state.menuItems} \n                        order={this.state.order}\n                        deleteOrder={this.deleteOrder}/>\n                </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}