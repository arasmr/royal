{"ast":null,"code":"import _defineProperty from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emrearas/Desktop/royal/src/Components/Login/LoginForm.js\";\nimport React from 'react';\nimport { Alert, Button, Card, CardBody, CardGroup, Col, Container, Form, FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { Icon } from 'react-icons-kit';\nimport { at } from 'react-icons-kit/fa/at';\nimport { pencil } from 'react-icons-kit/fa/pencil';\nimport firebase from 'firebase';\nimport base, { firebaseApp } from '../../base';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: '',\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      errorText: '',\n      failed: false,\n      touched: {\n        email: false,\n        password: false\n      } // create ref to be able get current input value \n\n    };\n    _this.emailRef = React.createRef();\n    _this.passwordRef = React.createRef();\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        switch (field) {\n          case 'email':\n            if (!_this.state.emailValid) {\n              _this.setState({\n                touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n              });\n            } else {\n              _this.setState({\n                touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, false))\n              });\n            }\n\n            break;\n\n          case 'password':\n            if (!_this.state.passwordValid) {\n              _this.setState({\n                touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n              });\n            } else {\n              _this.setState({\n                touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, false))\n              });\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      };\n    };\n\n    _this.handleUserInput = function (e) {\n      _this.setState({\n        failed: false,\n        formValid: false\n      });\n\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var email = _this.emailRef.current.props.value;\n      var password = _this.passwordRef.current.props.value;\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (res) {\n        localStorage.setItem(res.user.ra);\n\n        _this.props.history.replace('/home');\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      event.currentTarget.reset();\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"validateField\",\n    // validate input fields\n    value: function validateField(fieldName, value) {\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case 'email':\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          break;\n\n        case 'password':\n          passwordValid = value.length >= 6;\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.emailValid && this.state.passwordValid\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      lo;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"p\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Sign In to your account \"), React.createElement(FormGroup, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"icon\",\n        size: 20,\n        icon: at,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        onBlur: this.handleBlur('email'),\n        name: \"email\",\n        value: this.state.email,\n        onChange: function onChange(events) {\n          _this2.handleUserInput(events);\n        },\n        type: \"text\",\n        ref: this.emailRef,\n        placeholder: \"Email\",\n        invalid: this.state.touched.email ? true : false,\n        valid: this.state.emailValid ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"This field required.\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"icon\",\n        size: 20,\n        icon: pencil,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        onBlur: this.handleBlur('password'),\n        name: \"password\",\n        value: this.state.password,\n        onChange: function onChange(events) {\n          _this2.handleUserInput(events);\n        },\n        type: \"password\",\n        ref: this.passwordRef,\n        placeholder: \"Password\",\n        invalid: this.state.touched.password ? true : false,\n        valid: this.state.passwordValid ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Password should be at least 6 character.\"))), React.createElement(Alert, {\n        color: \"danger\",\n        isOpen: this.state.formValid && this.state.failed,\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.state.errorText), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        onSubmit: this.handleSubmit,\n        color: \"primary\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Login\")))))))))));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/emrearas/Desktop/royal/src/Components/Login/LoginForm.js"],"names":["React","Alert","Button","Card","CardBody","CardGroup","Col","Container","Form","FormFeedback","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Icon","at","pencil","firebase","base","firebaseApp","LoginForm","state","email","password","emailValid","passwordValid","formValid","errorText","failed","touched","emailRef","createRef","passwordRef","handleBlur","field","evt","setState","handleUserInput","e","name","target","value","validateField","handleSubmit","event","preventDefault","current","props","auth","signInWithEmailAndPassword","then","res","localStorage","setItem","user","ra","history","replace","catch","err","console","log","currentTarget","reset","fieldName","match","length","validateForm","lo","events","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Alert, Button, Card, CardBody, CardGroup, Col, Container, Form, FormFeedback, FormGroup , Input, InputGroup, InputGroupAddon,InputGroupText, Row } from 'reactstrap';\nimport {Icon} from 'react-icons-kit';\nimport {at} from 'react-icons-kit/fa/at';\nimport {pencil} from 'react-icons-kit/fa/pencil';\nimport firebase from 'firebase';\nimport base,{firebaseApp} from '../../base';\n\nclass LoginForm extends React.Component{\n    state = {\n        email:'',\n        password:'',\n        emailValid: false,\n        passwordValid: false,\n        formValid: false,\n        errorText:'',\n        failed:false,\n        touched: {\n          email:false,\n          password:false,\n        }\n    }\n\n        // create ref to be able get current input value \n    emailRef = React.createRef();\n    passwordRef = React.createRef();\n\n    // give feedback if the user clicked an inout an still not valid\n    handleBlur = (field) => (evt) => {\n        switch (field) {\n        case 'email':\n                    if (!this.state.emailValid) {\n                        this.setState({\n                            touched: {...this.state.touched, [field]: true}\n                        })\n                    } else {\n                        this.setState({\n                            touched: {...this.state.touched, [field]: false}\n                        })\n                    }\n                    break;\n        case 'password':\n            if (!this.state.passwordValid) {\n                this.setState({\n                    touched: {...this.state.touched, [field]: true}\n                })\n            } else {\n                this.setState({\n                    touched: {...this.state.touched, [field]: false}\n                })\n            }\n            break;\n            default:\n            break;\n        }\n    }\n\n    // get user input changes\n    handleUserInput = (e) => {\n        this.setState({\n        failed:false,\n        formValid:false\n        })\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value}, \n        () => { this.validateField(name, value) });\n    }\n\n    // validate input fields\n    validateField(fieldName, value) {\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n\n        switch(fieldName) {\n        case 'email':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            break;\n        case 'password':\n            passwordValid = value.length >= 6;\n            break;\n        default:\n            break;\n        }\n        this.setState({\n        emailValid: emailValid,\n        passwordValid: passwordValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({formValid: \n        this.state.emailValid && \n        this.state.passwordValid\n        });\n    }\n\n    componentDidMount(){\n        lo\n    }\n    \n\n    handleSubmit =(event) => {\n        event.preventDefault();\n        const email = this.emailRef.current.props.value;\n        const password = this.passwordRef.current.props.value;\n        firebase.auth().signInWithEmailAndPassword(email, password)\n        .then(res => {\n            localStorage.setItem(res.user.ra);\n            this.props.history.replace('/home')})\n        .catch(err => console.log(err));\n        event.currentTarget.reset();\n    }\n\n    render(){\n        return(\n            <div className=\"app flex-row align-items-center\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"6\">\n                        <CardGroup>\n                            <Card className=\"p-4\">\n                            <CardBody>\n                                <Form onSubmit = {this.handleSubmit}>\n                                    <h1>Login</h1>\n                                    <p className=\"text-muted\">Sign In to your account </p>\n                                    <FormGroup className = \"form-group\">\n                                        <InputGroup className=\"mb-4\">\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                            <Icon className=\"icon\" size={20} icon={at}/>\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input \n                                            onBlur={this.handleBlur('email')}\n                                            name='email' \n                                            value={this.state.email}\n                                            onChange={(events) => {this.handleUserInput(events)}} \n                                            type=\"text\" \n                                            ref={this.emailRef}\n                                            placeholder=\"Email\" \n                                            invalid={this.state.touched.email ? true : false}\n                                            valid={this.state.emailValid ? true : false}\n                                        />\n                                        <FormFeedback>This field required.</FormFeedback>\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <InputGroup className=\"mb-4\">\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <Icon className=\"icon\" size={20} icon={pencil}/>\n                                            </InputGroupText>\n                                        </InputGroupAddon>      \n                                        <Input\n                                            onBlur={this.handleBlur('password')}\n                                            name='password' \n                                            value={this.state.password}\n                                            onChange={(events) => {this.handleUserInput(events)}} \n                                            type=\"password\" \n                                            ref={this.passwordRef}\n                                            placeholder=\"Password\" \n                                            invalid={this.state.touched.password ? true : false}\n                                            valid={this.state.passwordValid ? true : false}\n                                        />\n                                        <FormFeedback>Password should be at least 6 character.</FormFeedback>\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <Alert color=\"danger\" isOpen={this.state.formValid && this.state.failed} className=\"align-items-center\">\n                                        {this.state.errorText}\n                                    </Alert>\n                                    <Row>\n                                        <Col xs=\"6\">\n                                        <Button \n                                            type=\"submit\"\n                                            disabled={!this.state.formValid} \n                                            onSubmit={this.handleSubmit} \n                                            color=\"primary\" \n                                            className=\"btn btn-primary\">Login\n                                        </Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </CardBody>\n                            </Card>\n                        </CardGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}