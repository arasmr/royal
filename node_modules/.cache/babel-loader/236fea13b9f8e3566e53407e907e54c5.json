{"ast":null,"code":"import _classCallCheck from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emrearas/Desktop/royal/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\nimport BruiloftenMenu from './Pages/BruiloftenMenu';\nimport BuffetMenu from './Pages/BuffetMenu';\nimport base from './base';\nimport PropTypes from 'prop-types';\n\nvar Router =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Router);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Router)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menuItems: {},\n      order: {}\n    };\n    return _this;\n  }\n\n  _createClass(Router, [{\n    key: \"render\",\n    // componentDidMount() {\n    //     const {params} = this.props.match;\n    //     const localStorageRef = localStorage.getItem(params);\n    //     if(localStorageRef){\n    //         this.setState({order:JSON.parse(localStorageRef)})\n    //     }\n    //     this.ref = base.syncState(`${params.storeId}/menuItems`,{\n    //         context:this,\n    //         state:'menuItems'\n    //     });\n    // }\n    // componentDidUpdate() {\n    //     localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    // }\n    // componentWillUnmount() {\n    //     base.removeBinding(this.ref);\n    // }\n    // updateMenuItem = (key, updatedMenuItem) => {\n    //     // take the copy of the current state\n    //     const menuItems = {...this.state.menuItems};\n    //     // update that state\n    //     menuItems[key] = updatedMenuItem;\n    //     // set the new menuItems object to the state\n    //     this.setState({menuItems});\n    // }\n    // deleteMenuItem = (key) => {\n    //     // take the copy of state\n    //     const menuItems = {...this.state.menuItems};\n    //     // update the state\n    //     menuItems[key] = null;\n    //     // set the state\n    //     this.setState({menuItems});\n    // }\n    // deleteOrder = (key) => {\n    //     // take the copy of state\n    //     const order = {...this.state.order};\n    //     // update the state\n    //     delete order[key];\n    //     // set the state\n    //     this.setState({order});\n    // }\n    // addMenuItem = menuItem => {\n    //     // take the copy of current state\n    //     const menuItems = {...this.state.menuItems};\n    //     // get the new state\n    //     menuItems[`menuItem${Date.now()}`] = menuItem;\n    //     // set the new state\n    //     this.setState({\n    //         menuItems:menuItems,\n    //     })\n    // }\n    // addToOrder = key => {\n    //     // take the copy of state\n    //     const order = {...this.state.order};\n    //     // change or update the state\n    //     order[key] = order[key] + 1 || 1;\n    //     // set the state\n    //     this.setState({order:order});\n    // }\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/bruiloften\",\n        component: BruiloftenMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/buffet\",\n        component: BuffetMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Router;\n}(React.Component);\n\nRouter.propTypes = {\n  match: PropTypes.object\n};\nexport default Router;","map":{"version":3,"sources":["/Users/emrearas/Desktop/royal/src/App.js"],"names":["React","BrowserRouter","Route","Switch","Dashboard","BruiloftenMenu","BuffetMenu","base","PropTypes","Router","state","menuItems","order","Component","propTypes","match","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAC,EADN;AAEJC,MAAAA,KAAK,EAAC;AAFF,K;;;;;;AASR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BACQ;AACJ,aACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,SAAS,EAAER,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,aAAlB;AAAgC,QAAA,SAAS,EAAEC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,SAAS,EAAEC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,CADJ;AASH;;;;EAvFgBN,KAAK,CAACa,S;;AAArBJ,M,CAMKK,S,GAAY;AACfC,EAAAA,KAAK,EAAGP,SAAS,CAACQ;AADH,C;AAoFvB,eAAeP,MAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\nimport BruiloftenMenu from './Pages/BruiloftenMenu';\nimport BuffetMenu from './Pages/BuffetMenu';\nimport base from './base';\nimport PropTypes from 'prop-types';\n\nclass Router extends React.Component{\n    state = {\n        menuItems:{},\n        order:{}\n    }\n\n    static propTypes = {\n        match : PropTypes.object,\n    };\n\n    // componentDidMount() {\n    //     const {params} = this.props.match;\n    //     const localStorageRef = localStorage.getItem(params);\n    //     if(localStorageRef){\n    //         this.setState({order:JSON.parse(localStorageRef)})\n    //     }\n    //     this.ref = base.syncState(`${params.storeId}/menuItems`,{\n    //         context:this,\n    //         state:'menuItems'\n    //     });\n    // }\n\n    // componentDidUpdate() {\n    //     localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    // }\n\n    // componentWillUnmount() {\n    //     base.removeBinding(this.ref);\n    // }\n\n    // updateMenuItem = (key, updatedMenuItem) => {\n    //     // take the copy of the current state\n    //     const menuItems = {...this.state.menuItems};\n    //     // update that state\n    //     menuItems[key] = updatedMenuItem;\n    //     // set the new menuItems object to the state\n    //     this.setState({menuItems});\n\n    // }\n\n    // deleteMenuItem = (key) => {\n    //     // take the copy of state\n    //     const menuItems = {...this.state.menuItems};\n    //     // update the state\n    //     menuItems[key] = null;\n    //     // set the state\n    //     this.setState({menuItems});\n    // }\n\n    // deleteOrder = (key) => {\n    //     // take the copy of state\n    //     const order = {...this.state.order};\n    //     // update the state\n    //     delete order[key];\n    //     // set the state\n    //     this.setState({order});\n    // }\n\n    // addMenuItem = menuItem => {\n    //     // take the copy of current state\n    //     const menuItems = {...this.state.menuItems};\n    //     // get the new state\n    //     menuItems[`menuItem${Date.now()}`] = menuItem;\n    //     // set the new state\n    //     this.setState({\n    //         menuItems:menuItems,\n    //     })\n    // }\n\n    // addToOrder = key => {\n    //     // take the copy of state\n    //     const order = {...this.state.order};\n    //     // change or update the state\n    //     order[key] = order[key] + 1 || 1;\n    //     // set the state\n    //     this.setState({order:order});\n    // }\n    render(){\n        return(\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/dashboard\" component={Dashboard}/>\n                    <Route exact path=\"/bruiloften\" component={BruiloftenMenu}/>\n                    <Route exact path=\"/buffet\" component={BuffetMenu}/>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router;"]},"metadata":{},"sourceType":"module"}