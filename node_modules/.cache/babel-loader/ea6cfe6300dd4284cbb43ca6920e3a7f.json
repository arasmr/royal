{"ast":null,"code":"import _objectSpread from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emrearas/Desktop/royal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emrearas/Desktop/royal/src/Pages/BuffetMenu.js\";\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport BuffetMenuItem from '../Components/BuffetMenu/BuffetMenuItem';\nimport base from '../base';\nimport PropTypes from 'prop-types';\n\nvar BuffetMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BuffetMenu, _React$Component);\n\n  function BuffetMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BuffetMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BuffetMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menuItems: {},\n      order: {}\n    };\n\n    _this.updateMenuItem = function (key, updatedMenuItem) {\n      // take the copy of the current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update that state\n\n\n      menuItems[key] = updatedMenuItem; // set the new menuItems object to the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteMenuItem = function (key) {\n      // take the copy of state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // update the state\n\n\n      menuItems[key] = null; // set the state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.deleteOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // update the state\n\n\n      delete order[key]; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.addMenuItem = function (menuItem) {\n      // take the copy of current state\n      var menuItems = _objectSpread({}, _this.state.menuItems); // get the new state\n\n\n      menuItems[\"menuItem\".concat(Date.now())] = menuItem; // set the new state\n\n      _this.setState({\n        menuItems: menuItems\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // take the copy of state\n      var order = _objectSpread({}, _this.state.order); // change or update the state\n\n\n      order[key] = order[key] + 1 || 1; // set the state\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BuffetMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      var localStorageRef = localStorage.getItem(params);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/menuItems\"), {\n        context: this,\n        state: 'menuItems'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(Col, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, Object.keys(this.props.menuItems).map(function (key) {\n        return React.createElement(Buffet, {\n          key: key,\n          index: key,\n          details: _this2.props.menuItems[key],\n          addToOrder: _this2.props.addToOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }), React.createElement(BuffetMenuItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BuffetMenu;\n}(React.Component);\n\nBuffetMenu.propTypes = {\n  match: PropTypes.object\n};\n;\nexport default BuffetMenu;","map":{"version":3,"sources":["/Users/emrearas/Desktop/royal/src/Pages/BuffetMenu.js"],"names":["React","Col","BuffetMenuItem","base","PropTypes","BuffetMenu","state","menuItems","order","updateMenuItem","key","updatedMenuItem","setState","deleteMenuItem","deleteOrder","addMenuItem","menuItem","Date","now","addToOrder","params","props","match","localStorageRef","localStorage","getItem","JSON","parse","ref","syncState","storeId","context","setItem","stringify","removeBinding","console","log","Object","keys","map","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col } from 'reactstrap';\nimport BuffetMenuItem from '../Components/BuffetMenu/BuffetMenuItem';\nimport base from '../base';\nimport PropTypes from 'prop-types';\n\nclass BuffetMenu extends React.Component{\n    state = {\n        menuItems:{},\n        order:{}\n    }\n\n    static propTypes = {\n        match : PropTypes.object,\n    };\n\n    componentDidMount() {\n        const {params} = this.props.match;\n        const localStorageRef = localStorage.getItem(params);\n        if(localStorageRef){\n            this.setState({order:JSON.parse(localStorageRef)})\n        }\n        this.ref = base.syncState(`${params.storeId}/menuItems`,{\n            context:this,\n            state:'menuItems'\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    updateMenuItem = (key, updatedMenuItem) => {\n        // take the copy of the current state\n        const menuItems = {...this.state.menuItems};\n        // update that state\n        menuItems[key] = updatedMenuItem;\n        // set the new menuItems object to the state\n        this.setState({menuItems});\n\n    }\n\n    deleteMenuItem = (key) => {\n        // take the copy of state\n        const menuItems = {...this.state.menuItems};\n        // update the state\n        menuItems[key] = null;\n        // set the state\n        this.setState({menuItems});\n    }\n\n    deleteOrder = (key) => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // update the state\n        delete order[key];\n        // set the state\n        this.setState({order});\n    }\n\n    addMenuItem = menuItem => {\n        // take the copy of current state\n        const menuItems = {...this.state.menuItems};\n        // get the new state\n        menuItems[`menuItem${Date.now()}`] = menuItem;\n        // set the new state\n        this.setState({\n            menuItems:menuItems,\n        })\n    }\n\n    addToOrder = key => {\n        // take the copy of state\n        const order = {...this.state.order};\n        // change or update the state\n        order[key] = order[key] + 1 || 1;\n        // set the state\n        this.setState({order:order});\n    }\n    render(){\n        console.log(this.state);\n        return (\n            <Col sm=\"10\">\n            {Object.keys(this.props.menuItems).map((key) => \n                        <Buffet\n                            key={key} \n                            index = {key}\n                            details={this.props.menuItems[key]} \n                            addToOrder={this.props.addToOrder}\n                        />\n                    )}\n                <BuffetMenuItem/>\n            </Col>\n        );\n    }\n};\n\nexport default BuffetMenu;"]},"metadata":{},"sourceType":"module"}